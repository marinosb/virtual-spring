int lookup[]={0	,
-6283	,
-12566	,
-18848	,
-25130	,
-31411	,
-37690	,
-43968	,
-50244	,
-56519	,
-62791	,
-69060	,
-75327	,
-81591	,
-87851	,
-94108	,
-100362	,
-106611	,
-112856	,
-119097	,
-125333	,
-131564	,
-137790	,
-144011	,
-150226	,
-156434	,
-162637	,
-168833	,
-175023	,
-181206	,
-187381	,
-193549	,
-199710	,
-205863	,
-212007	,
-218143	,
-224271	,
-230389	,
-236499	,
-242599	,
-248690	,
-254771	,
-260842	,
-266902	,
-272952	,
-278991	,
-285019	,
-291036	,
-297042	,
-303035	,
-309017	,
-314987	,
-320944	,
-326888	,
-332820	,
-338738	,
-344643	,
-350534	,
-356412	,
-362275	,
-368125	,
-373959	,
-379779	,
-385584	,
-391374	,
-397148	,
-402906	,
-408649	,
-414376	,
-420086	,
-425779	,
-431456	,
-437116	,
-442758	,
-448383	,
-453990	,
-459580	,
-465151	,
-470704	,
-476238	,
-481754	,
-487250	,
-492727	,
-498185	,
-503623	,
-509041	,
-514440	,
-519817	,
-525175	,
-530511	,
-535827	,
-541121	,
-546394	,
-551646	,
-556876	,
-562083	,
-567269	,
-572432	,
-577573	,
-582690	,
-587785	,
-592857	,
-597905	,
-602930	,
-607930	,
-612907	,
-617860	,
-622788	,
-627691	,
-632570	,
-637424	,
-642253	,
-647056	,
-651834	,
-656586	,
-661312	,
-666012	,
-670686	,
-675333	,
-679953	,
-684547	,
-689114	,
-693653	,
-698165	,
-702650	,
-707107	,
-711536	,
-715936	,
-720309	,
-724653	,
-728969	,
-733255	,
-737513	,
-741742	,
-745941	,
-750111	,
-754251	,
-758362	,
-762443	,
-766493	,
-770513	,
-774503	,
-778462	,
-782391	,
-786288	,
-790155	,
-793990	,
-797794	,
-801567	,
-805308	,
-809017	,
-812694	,
-816339	,
-819952	,
-823533	,
-827081	,
-830596	,
-834078	,
-837528	,
-840945	,
-844328	,
-847678	,
-850994	,
-854277	,
-857527	,
-860742	,
-863923	,
-867071	,
-870184	,
-873262	,
-876307	,
-879316	,
-882291	,
-885231	,
-888136	,
-891007	,
-893841	,
-896641	,
-899405	,
-902134	,
-904827	,
-907484	,
-910106	,
-912692	,
-915241	,
-917755	,
-920232	,
-922673	,
-925077	,
-927445	,
-929776	,
-932071	,
-934329	,
-936550	,
-938734	,
-940881	,
-942991	,
-945063	,
-947098	,
-949096	,
-951057	,
-952979	,
-954865	,
-956712	,
-958522	,
-960294	,
-962028	,
-963724	,
-965382	,
-967001	,
-968583	,
-970127	,
-971632	,
-973099	,
-974527	,
-975917	,
-977268	,
-978581	,
-979855	,
-981091	,
-982287	,
-983445	,
-984564	,
-985645	,
-986686	,
-987688	,
-988652	,
-989576	,
-990461	,
-991308	,
-992115	,
-992883	,
-993611	,
-994301	,
-994951	,
-995562	,
-996134	,
-996666	,
-997159	,
-997613	,
-998027	,
-998402	,
-998737	,
-999033	,
-999289	,
-999507	,
-999684	,
-999822	,
-999921	,
-999980	,
-1000000	,
-999980	,
-999921	,
-999822	,
-999684	,
-999507	,
-999289	,
-999033	,
-998737	,
-998402	,
-998027	,
-997613	,
-997159	,
-996666	,
-996134	,
-995562	,
-994951	,
-994301	,
-993611	,
-992883	,
-992115	,
-991308	,
-990461	,
-989576	,
-988652	,
-987688	,
-986686	,
-985645	,
-984564	,
-983445	,
-982287	,
-981091	,
-979855	,
-978581	,
-977268	,
-975917	,
-974527	,
-973099	,
-971632	,
-970127	,
-968583	,
-967001	,
-965382	,
-963724	,
-962028	,
-960294	,
-958522	,
-956712	,
-954865	,
-952979	,
-951057	,
-949096	,
-947098	,
-945063	,
-942991	,
-940881	,
-938734	,
-936550	,
-934329	,
-932071	,
-929776	,
-927445	,
-925077	,
-922673	,
-920232	,
-917755	,
-915241	,
-912692	,
-910106	,
-907484	,
-904827	,
-902134	,
-899405	,
-896641	,
-893841	,
-891007	,
-888136	,
-885231	,
-882291	,
-879316	,
-876307	,
-873262	,
-870184	,
-867071	,
-863923	,
-860742	,
-857527	,
-854277	,
-850994	,
-847678	,
-844328	,
-840945	,
-837528	,
-834078	,
-830596	,
-827081	,
-823533	,
-819952	,
-816339	,
-812694	,
-809017	,
-805308	,
-801567	,
-797794	,
-793990	,
-790155	,
-786288	,
-782391	,
-778462	,
-774503	,
-770513	,
-766493	,
-762443	,
-758362	,
-754251	,
-750111	,
-745941	,
-741742	,
-737513	,
-733255	,
-728969	,
-724653	,
-720309	,
-715936	,
-711536	,
-707107	,
-702650	,
-698165	,
-693653	,
-689114	,
-684547	,
-679953	,
-675333	,
-670686	,
-666012	,
-661312	,
-656586	,
-651834	,
-647056	,
-642253	,
-637424	,
-632570	,
-627691	,
-622788	,
-617860	,
-612907	,
-607930	,
-602930	,
-597905	,
-592857	,
-587785	,
-582690	,
-577573	,
-572432	,
-567269	,
-562083	,
-556876	,
-551646	,
-546394	,
-541121	,
-535827	,
-530511	,
-525175	,
-519817	,
-514440	,
-509041	,
-503623	,
-498185	,
-492727	,
-487250	,
-481754	,
-476238	,
-470704	,
-465151	,
-459580	,
-453990	,
-448383	,
-442758	,
-437116	,
-431456	,
-425779	,
-420086	,
-414376	,
-408649	,
-402906	,
-397148	,
-391374	,
-385584	,
-379779	,
-373959	,
-368125	,
-362275	,
-356412	,
-350534	,
-344643	,
-338738	,
-332820	,
-326888	,
-320944	,
-314987	,
-309017	,
-303035	,
-297042	,
-291036	,
-285019	,
-278991	,
-272952	,
-266902	,
-260842	,
-254771	,
-248690	,
-242599	,
-236499	,
-230389	,
-224271	,
-218143	,
-212007	,
-205863	,
-199710	,
-193549	,
-187381	,
-181206	,
-175023	,
-168833	,
-162637	,
-156434	,
-150226	,
-144011	,
-137790	,
-131564	,
-125333	,
-119097	,
-112856	,
-106611	,
-100362	,
-94108	,
-87851	,
-81591	,
-75327	,
-69060	,
-62791	,
-56519	,
-50244	,
-43968	,
-37690	,
-31411	,
-25130	,
-18848	,
-12566	,
-6283	,
0	,
6283	,
12566	,
18848	,
25130	,
31411	,
37690	,
43968	,
50244	,
56519	,
62791	,
69060	,
75327	,
81591	,
87851	,
94108	,
100362	,
106611	,
112856	,
119097	,
125333	,
131564	,
137790	,
144011	,
150226	,
156434	,
162637	,
168833	,
175023	,
181206	,
187381	,
193549	,
199710	,
205863	,
212007	,
218143	,
224271	,
230389	,
236499	,
242599	,
248690	,
254771	,
260842	,
266902	,
272952	,
278991	,
285019	,
291036	,
297042	,
303035	,
309017	,
314987	,
320944	,
326888	,
332820	,
338738	,
344643	,
350534	,
356412	,
362275	,
368125	,
373959	,
379779	,
385584	,
391374	,
397148	,
402906	,
408649	,
414376	,
420086	,
425779	,
431456	,
437116	,
442758	,
448383	,
453990	,
459580	,
465151	,
470704	,
476238	,
481754	,
487250	,
492727	,
498185	,
503623	,
509041	,
514440	,
519817	,
525175	,
530511	,
535827	,
541121	,
546394	,
551646	,
556876	,
562083	,
567269	,
572432	,
577573	,
582690	,
587785	,
592857	,
597905	,
602930	,
607930	,
612907	,
617860	,
622788	,
627691	,
632570	,
637424	,
642253	,
647056	,
651834	,
656586	,
661312	,
666012	,
670686	,
675333	,
679953	,
684547	,
689114	,
693653	,
698165	,
702650	,
707107	,
711536	,
715936	,
720309	,
724653	,
728969	,
733255	,
737513	,
741742	,
745941	,
750111	,
754251	,
758362	,
762443	,
766493	,
770513	,
774503	,
778462	,
782391	,
786288	,
790155	,
793990	,
797794	,
801567	,
805308	,
809017	,
812694	,
816339	,
819952	,
823533	,
827081	,
830596	,
834078	,
837528	,
840945	,
844328	,
847678	,
850994	,
854277	,
857527	,
860742	,
863923	,
867071	,
870184	,
873262	,
876307	,
879316	,
882291	,
885231	,
888136	,
891007	,
893841	,
896641	,
899405	,
902134	,
904827	,
907484	,
910106	,
912692	,
915241	,
917755	,
920232	,
922673	,
925077	,
927445	,
929776	,
932071	,
934329	,
936550	,
938734	,
940881	,
942991	,
945063	,
947098	,
949096	,
951057	,
952979	,
954865	,
956712	,
958522	,
960294	,
962028	,
963724	,
965382	,
967001	,
968583	,
970127	,
971632	,
973099	,
974527	,
975917	,
977268	,
978581	,
979855	,
981091	,
982287	,
983445	,
984564	,
985645	,
986686	,
987688	,
988652	,
989576	,
990461	,
991308	,
992115	,
992883	,
993611	,
994301	,
994951	,
995562	,
996134	,
996666	,
997159	,
997613	,
998027	,
998402	,
998737	,
999033	,
999289	,
999507	,
999684	,
999822	,
999921	,
999980	,
1000000	,
999980	,
999921	,
999822	,
999684	,
999507	,
999289	,
999033	,
998737	,
998402	,
998027	,
997613	,
997159	,
996666	,
996134	,
995562	,
994951	,
994301	,
993611	,
992883	,
992115	,
991308	,
990461	,
989576	,
988652	,
987688	,
986686	,
985645	,
984564	,
983445	,
982287	,
981091	,
979855	,
978581	,
977268	,
975917	,
974527	,
973099	,
971632	,
970127	,
968583	,
967001	,
965382	,
963724	,
962028	,
960294	,
958522	,
956712	,
954865	,
952979	,
951057	,
949096	,
947098	,
945063	,
942991	,
940881	,
938734	,
936550	,
934329	,
932071	,
929776	,
927445	,
925077	,
922673	,
920232	,
917755	,
915241	,
912692	,
910106	,
907484	,
904827	,
902134	,
899405	,
896641	,
893841	,
891007	,
888136	,
885231	,
882291	,
879316	,
876307	,
873262	,
870184	,
867071	,
863923	,
860742	,
857527	,
854277	,
850994	,
847678	,
844328	,
840945	,
837528	,
834078	,
830596	,
827081	,
823533	,
819952	,
816339	,
812694	,
809017	,
805308	,
801567	,
797794	,
793990	,
790155	,
786288	,
782391	,
778462	,
774503	,
770513	,
766493	,
762443	,
758362	,
754251	,
750111	,
745941	,
741742	,
737513	,
733255	,
728969	,
724653	,
720309	,
715936	,
711536	,
707107	,
702650	,
698165	,
693653	,
689114	,
684547	,
679953	,
675333	,
670686	,
666012	,
661312	,
656586	,
651834	,
647056	,
642253	,
637424	,
632570	,
627691	,
622788	,
617860	,
612907	,
607930	,
602930	,
597905	,
592857	,
587785	,
582690	,
577573	,
572432	,
567269	,
562083	,
556876	,
551646	,
546394	,
541121	,
535827	,
530511	,
525175	,
519817	,
514440	,
509041	,
503623	,
498185	,
492727	,
487250	,
481754	,
476238	,
470704	,
465151	,
459580	,
453990	,
448383	,
442758	,
437116	,
431456	,
425779	,
420086	,
414376	,
408649	,
402906	,
397148	,
391374	,
385584	,
379779	,
373959	,
368125	,
362275	,
356412	,
350534	,
344643	,
338738	,
332820	,
326888	,
320944	,
314987	,
309017	,
303035	,
297042	,
291036	,
285019	,
278991	,
272952	,
266902	,
260842	,
254771	,
248690	,
242599	,
236499	,
230389	,
224271	,
218143	,
212007	,
205863	,
199710	,
193549	,
187381	,
181206	,
175023	,
168833	,
162637	,
156434	,
150226	,
144011	,
137790	,
131564	,
125333	,
119097	,
112856	,
106611	,
100362	,
94108	,
87851	,
81591	,
75327	,
69060	,
62791	,
56519	,
50244	,
43968	,
37690	,
31411	,
25130	,
18848	,
12566	,
6283	,

};

int precomputeMultiplier=1000000;

int torquePin=DAC0;
int zeroTorque=1900;

unsigned long cachedMillis;

int period=1000;
int amplitudeMultiplier=10;

unsigned long nextCommMillis=0;

void setup() {
  delay(1000);
  Serial.begin(115200);
  
  analogWriteResolution(12);

  pinMode(torquePin, OUTPUT);
  analogWrite(torquePin, zeroTorque);
}

void loop() {
  // put your main code here, to run repeatedly: 
  
  cachedMillis=millis();
  
//  int angle=(((cachedMillis%period)-(period/2))/(period/2))*(PI/2);
//  int torque=zeroTorque-sin(angle)*amplitude;
  
  int index=cachedMillis%period;
  int torque=(lookup[index]*amplitudeMultiplier/precomputeMultiplier)+zeroTorque;
  
  analogWrite(torquePin, torque);
  
  //if(cachedMillis>nextCommMillis)
  //{
    processIncoming();
  //}
}

void processIncoming()
{
  if(Serial.available()>0)
  {
    char x=Serial.read();
    if(x=='m')
    {
      int newAmplitudeMultiplier= Serial.parseInt();
      if(newAmplitudeMultiplier>0 && newAmplitudeMultiplier < 400)
      {
        amplitudeMultiplier=newAmplitudeMultiplier;
      }
    }
    else if(x=='r')
    {
      amplitudeMultiplier=1;
    }
    Serial.read();//newline
  }

    if(cachedMillis%1000==0)
    {
      Serial.print(amplitudeMultiplier);
      Serial.print("\n");
    }
    
    
    //nextCommMillis=1000+cachedMillis;
}


